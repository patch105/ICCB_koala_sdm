---
title: "ICCB Species data download"
author: "Scott Forrest and Charlotte Patterson"
date: "`r Sys.Date()`"
execute: 
  cache: false
# bibliography: references.bib
toc: true
number-sections: false
format: 
  html:
    self-contained: true
    code-fold: show
    code-tools: true
    df-print: paged
    code-line-numbers: true
    code-overflow: scroll
    fig-format: png
    fig-dpi: 300
  pdf:
    geometry: 
      - top=30mm
      - left=30mm
editor:
  source
abstract: |
  In this script we are downloading data from ALA (with an option for GBIF) for koalas (Phascolarctos cinereus) in the South-East Queensland (SEQ) region. We are then cleaning the data and in other scripts creating a species distribution model for current and future climate scenarios.
---

## Install packages

```{r}

# install.packages("galah")

```

## Import packages

```{r}

library(dplyr)
library(purrr)
library(ggplot2)
library(galah)
library(terra)
library(sf)
library(predicts)
library(tidyterra)


```

## To cite the `galah` package

```{r}

# Package citation
citation(package = "galah")

```

## Load South East Queensland (SEQ) boundary

https://qldspatial.information.qld.gov.au/catalogue/custom/detail.page?fid={3F3DBD69-647B-4833-B0A5-CC43D5E70699}

```{r}

# Load the study area shapefile
LGA <- st_read("Data/Environmental_variables/Local_Government_Areas.shp")

# Check the coordinate reference system (CRS)
st_crs(LGA)

# Convert to WGS84
LGA <- LGA %>% st_transform(4326)

# Select local govt. areas for South East Queensland
LGA_SEQ <- LGA %>% 
  filter(lga %in% c("Brisbane City", 
                    "Moreton Bay City", 
                    "Logan City", 
                    "Ipswich City", 
                    "Redland City", 
                    "Scenic Rim Regional", 
                    "Somerset Regional", 
                    "Lockyer Valley Regional", 
                    "Gold Coast City", 
                    "Sunshine Coast Regional", 
                    "Toowoomba Regional", 
                    "Noosa Shire"))

ggplot() +
  geom_sf(data = LGA, color = "black") +
  geom_sf(data = LGA_SEQ, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(title = "Local Government Areas Queensland (SEQ in purple)")
  

ggplot() +
  geom_sf(data = LGA_SEQ, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(title = "Local Government Areas South East Queensland (SEQ)")

```
## Merge into a single polygon

```{r}

# Merge the SEQ LGAs into one polygon
SEQ_extent <- st_union(LGA_SEQ)

ggplot() +
  geom_sf(data = SEQ_extent, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  theme_minimal() +
  theme(legend.position = "none") +
  ggtitle("South-East Queensland Spatial Extent") + 
  theme_bw() 

```

## Atlas of Living Australia using "galah" package

To access records from the ALA, you will need to be registered.

There are two registration options:

1.  If you are affiliated with an Australian institution, you should be able to register for ALA through your institution. Find your institution in the list of institutions when you select 'Login' [on the ALA website](https://www.ala.org.au/). Follow the prompts to enter your institution email and password. If your institution is not listed, you will need to register for an ALA account.

2. If you are not affiliated with an Australian institution, you will need to register for an ALA account. You can do this by selecting 'Register' [on the ALA website](https://www.ala.org.au/). Follow the prompts to enter your email and password.

```{r}

galah_config(atlas = "ALA",
             # username = "scott.forrest@hdr.qut.edu.au",
             email = "scott.forrest@hdr.qut.edu.au"
             # password = "Password"
             )

```

## Download koala data from ALA

Usually you would check that the CRS for the occurrences is the same as the shapefile. However, we know that the `galah' package operates in WGS84.

```{r}

koala_occurrences <- galah_call() %>% 
  galah_identify("Phascolarctos cinereus") %>% 
  galah_filter(
    stateProvince == "Queensland",
    occurrenceStatus == "PRESENT"
  ) %>% 
  atlas_occurrences()

```
## Clean koala data

```{r}

# Create a map using ggplot2
ggplot() +
  geom_sf(data = LGA, color = "black") +
  geom_point(data = koala_occurrences,
             aes(x = decimalLongitude,
                 y = decimalLatitude),
             color = "blue", size = 0.5) + # Add points for occurrences
  ggtitle("Koala occurrences across Queensland") +             # Add title
  theme_bw()

```

## Filter by SEQ region

```{r}

# Check for missing values in decimalLongitude and decimalLatitude
paste0("Number of NAs in 'longitude' ", sum(is.na(koala_occurrences$decimalLongitude)))
paste0("Number of NAs in 'latitude' ", sum(is.na(koala_occurrences$decimalLatitude)))

koala_occ_sf <- koala_occurrences %>% 
  drop_na(decimalLongitude, decimalLatitude) %>% # remove NA values
  st_as_sf(coords = c("decimalLongitude", "decimalLatitude"), 
           crs = 4326) %>%
  st_intersection(SEQ_extent) %>%
  distinct()                    # drop any duplicated records


```

## Plot the filtered data

```{r}

# Create a map using ggplot2
ggplot() +
  geom_sf(data = SEQ_extent, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  geom_sf(data = koala_occ_sf,                           # Add koala presence locations
          aes(geometry = geometry),
             color = "blue", size = 0.5) +               # Add points for occurrences
  ggtitle("Koala occurrences in South East Queensland") +      # Add title
  theme_bw()

```

# Sample background points

```{r}

# Convert our SEQ extent to a SpatExtent object by converting to a SpatVector
SEQ_extent.vect <- terra::vect(SEQ_extent)
ext <- terra::ext(SEQ_extent.vect)

# Check and see that we have a SpatExtent
str(ext)

# Rasterise extent
ext.rast <- terra::rast(ext, 
                    nrows = 1000, 
                    ncols = 1000, 
                    crs = "EPSG:4326", 
                    vals = 1) # Create a raster with the extent of SEQ

# Mask extent by SEQ boundary
ext.rast <- terra::mask(ext.rast, SEQ_extent.vect, updatevalue = NA)

crs(ext.rast) <- "EPSG:4326"
names(ext.rast) <- "SEQ_extent"

plot(ext.rast)

# Set the location and number of background points
# Random sampling at first
# The mask means that any NA (not SEQ) locations do not include background points
background <- predicts::backgroundSample(mask = ext.rast, 
                                         n = 50000)

# Convert to terra SpatVector object
background <- terra::vect(background, crs = "EPSG:4326")

# Convert background points (SpatVector) to data frame
background_df <- as.data.frame(geom(background))

koala_occ.vect <- vect(koala_occ_sf)

# Plot the presences (blue) and the background points (grey)
ggplot() +
  geom_sf(data = SEQ_extent, fill = "purple3", alpha = 0.5, color = "black", size = 0.2) +
  geom_spatvector(data = background,                           # Add koala presence locations
             color = "gray", cex = 0.5) +               # Add points for occurrences
  geom_spatvector(data = koala_occ.vect, 
                  aes(geometry = geometry), 
                  color = "blue", cex = 0.5) + # Add background points
  ggtitle("Koala occurrences (blue) and background points (grey) in South East Queensland") +      # Add title
  theme_bw()


```
## Save koala presences and background points 
This ensures quick upload in the future and that these records can be used among models. 

```{r}

writeVector(koala_occ.vect, "Data/Biological_records/SEQ_koala_occurrences.shp", overwrite = T)

writeVector(background, "Data/Biological_records/background_points_50k_random.shp", overwrite = T)

```

## Save SEQ extent

```{r}

writeVector(SEQ_extent.vect, "Data/Environmental_variables/SEQ_extent.shp", overwrite = T)

```

